*****How did viewing a diff between two versions of a file help you see the bug that
was introduced?

By viewing the code changes, I'll be able to find out which commit introduced that bug and be able to fix it.

*****How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

I'll be able to see all the changes that have been made, which in the future will help me to easily remember what I've done in the long run.

******What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

Pros of manually commit is I can commit every logical changes, rather than certain lines or during a certain time frame, which will not always be logical.
Cons, sometimes one may forget to commit, or if sudden event happens like out of electricity or hurrying to get a bus/train, in this circumstances, works not been committed might be lost.

******Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

multile file commit will benefit big projects when need multiple members/teams working on different aspect of that project, rather than do it seperately, members will be able to cooperate.

******How can you use the commands git log and git diff to view the history of files?

I can use git log to see the commit that's been made, using git diff w/ different id I will be able to check the specific changes in every commits

******How might using version control make you more confident to make changes that
could break something?

I can always try the new ideas and go back to the previous commit.

******Now that you have your workspace set up, what do you want to try using Git for?

use git for my website and apps.